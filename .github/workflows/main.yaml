name: SST deploy workflow
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, closed, reopened]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

# concurrency group name ensures concurrent workflow runs wait for any in-progress job to finish
concurrency: merge-${{ github.ref }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  DeployApp:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/Github
          aws-region: ap-south-1
          role-session-name: GithubActionsDeploy

      - name: Prepare .env
        run: |
          touch .env.local
          echo NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} >> .env.local
          echo NEXT_PUBLIC_GRAPHQL_API=${{ secrets.NEXT_PUBLIC_GRAPHQL_API }} >> .env.local
          echo NEXT_PUBLIC_GRAPHQL_SUBSCRIPTIONS=${{ secrets.NEXT_PUBLIC_GRAPHQL_SUBSCRIPTIONS }} >> .env.local
          echo NEXT_PUBLIC_CLOUDFRONT_URL=${{ secrets.NEXT_PUBLIC_CLOUDFRONT_URL }} >> .env.local

      - name: Remove Preview SST Environment
        if: github.event_name == 'pull_request' && (github.event.action == 'closed' || github.event.pull_request.merged == true)
        run: |
          pnpm sst remove --stage ${{ env.BRANCH_NAME }}

      - name: Preview Deploy
        if: ${{ env.BRANCH_NAME }} != 'main' && github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')
        run: |
          pnpm sst deploy --stage ${{ env.BRANCH_NAME }}

      - name: Production Deploy
        if: ${{ env.BRANCH_NAME }} == 'main'
        run: |
          pnpm sst deploy --stage=prod
